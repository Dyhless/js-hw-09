{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAC/BC,iBAAiB,UAGA,SAAAC,GACpBA,EAAMC,iBAGwC,MAAxCC,EAAQC,OAAON,SAASC,cAAc,uBAAuBM,OACtDD,OAAON,SAASC,cAAc,sBAAsBM,OAClDD,OAAON,SAASC,cAAc,wBAAwBM,QAavE,SAAwBC,EAAUC,GAEhC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAO,GAE3BA,EAAM,G,EArBwBQ,CAApBT,SAAUH,GACtBa,MAAK,EAACV,SAAEA,EAAQC,MAAEA,MACjBU,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBb,QAAiBC,MAAU,IAEzEa,OAAM,EAACd,SAAEA,EAAQC,MAAEA,MAClBU,EAAArB,GAASsB,OAAOG,QAAQ,sBAAoBf,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Находим форму по классу и добавляем обработчик события submit\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\n// Обработчик события submit формы\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  // Получаем значения полей ввода и преобразуем их в числа\n  const delay = Number(document.querySelector('input[name=\"delay\"]').value);\n  const step = Number(document.querySelector('input[name=\"step\"]').value);\n  const amount = Number(document.querySelector('input[name=\"amount\"]').value);\n\n  // Создаем промисы с заданными параметрами\n  createPromises(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n// Создание промисов\nfunction createPromises(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay});\n      } else {\n        reject({ position, delay});\n      }\n    }, delay);\n  });\n}\n\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay1","Number","value","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$createPromises","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.d2bf95d9.js.map"}