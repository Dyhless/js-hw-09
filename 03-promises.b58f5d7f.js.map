{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAC/BC,iBAAiB,UAGA,SAAAC,GACpBA,EAAMC,iBAGwC,IAAxCC,EAAQC,OAAON,SAASC,cAAc,uBAAuBM,OACtDD,OAAON,SAASC,cAAc,sBAAsBM,OAClDD,OAAON,SAASC,cAAc,wBAAwBM,QAavE,SAAwBC,EAAUC,GAEhC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KArB8BQ,CAApBT,SAAUH,GACtBa,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUC,EAAKU,EAALV,MACjBY,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANf,EAAM,M,IAEvEgB,OAAM,SAAAN,G,IAAGC,EAAQD,EAARX,SAAUC,EAAKU,EAALV,MAClBY,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAuCF,OAAfJ,EAAS,QAAYI,OAANf,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Находим форму по классу и добавляем обработчик события submit\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\n// Обработчик события submit формы\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  // Получаем значения полей ввода и преобразуем их в числа\n  const delay = Number(document.querySelector('input[name=\"delay\"]').value);\n  const step = Number(document.querySelector('input[name=\"step\"]').value);\n  const amount = Number(document.querySelector('input[name=\"amount\"]').value);\n\n  // Создаем промисы с заданными параметрами\n  createPromises(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n// Создание промисов\nfunction createPromises(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay});\n      } else {\n        reject({ position, delay});\n      }\n    }, delay);\n  });\n}\n\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay1","Number","value","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromises","then","param","_$position","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b58f5d7f.js.map"}