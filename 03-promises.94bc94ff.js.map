{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAC/BC,iBAAiB,UAGA,SAAAC,GACpBA,EAAMC,iBAGwC,IAAxCC,EAAQC,OAAON,SAASC,cAAc,uBAAuBM,OAC7DC,EAAOF,OAAON,SAASC,cAAc,sBAAsBM,QAQnD,SAAQE,EAAQJ,EAAOG,GACrC,I,kBACE,IAAME,EAAWC,EACXC,EAAeP,GAASM,EAAI,GAAKH,EAGvB,IAAIK,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAV,EAAUL,MAAOO,IAE3BG,EAAO,CAAEK,SAAAV,EAAUL,MAAOO,G,GAE3BA,E,IAMFS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUG,EAAKD,EAALjB,MACjBmB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAN,G,IAAGF,EAAQE,EAARF,SAAUG,EAAKD,EAALjB,MAClBmB,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANJ,EAAM,M,KAxBhEO,EAAI,EAAGA,GAAKrB,EAAQqB,IAAGC,EAAAD,E,CALGE,CAHpB1B,OAAON,SAASC,cAAc,wBAAwBM,OAG9CF,EAAOG,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Находим форму по классу и добавляем обработчик события submit\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\n// Обработчик события submit формы\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  // Получаем значения полей ввода и преобразуем их в числа\n  const delay = Number(document.querySelector('input[name=\"delay\"]').value);\n  const step = Number(document.querySelector('input[name=\"step\"]').value);\n  const amount = Number(document.querySelector('input[name=\"amount\"]').value);\n\n  // Создаем промисы с заданными параметрами\n  createPromises(amount, delay, step);\n}\n\n// Создание промисов\nfunction createPromises(amount, delay, step) {\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const currentDelay = delay + (i - 1) * step;\n\n    // Создаем промис с задержкой\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay: currentDelay });\n        } else {\n          reject({ position, delay: currentDelay });\n        }\n      }, currentDelay);\n    });\n\n    \n    // Обрабатываем результат промиса\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay","Number","value","step","amount","position1","i","currentDelay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","param","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","i1","_loop","$ce04d3a99e08e73b$var$createPromises"],"version":3,"file":"03-promises.94bc94ff.js.map"}