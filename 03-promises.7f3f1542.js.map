{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAC/BC,iBAAiB,UAGA,SAAAC,GACpBA,EAAMC,iBAGwC,MAAxCC,EAAQC,OAAON,SAASC,cAAc,uBAAuBM,OAC7DC,EAAOF,OAAON,SAASC,cAAc,sBAAsBM,QAQnD,SAAQE,EAAQC,EAAOF,GACrC,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAChC,MAAMC,EAAWD,EACXE,EAAeH,GAASC,EAAI,GAAKH,EAGvB,IAAIM,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUP,MAAOQ,IAE3BG,EAAO,CAAEK,SAAAT,EAAUP,MAAOQ,GAAe,GAE1CA,EAAa,IAMfS,MAAK,EAACD,SAAEA,EAAQhB,MAAEA,MACjBkB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBJ,QAAiBhB,MAAU,IAEzEqB,OAAM,EAACL,SAAEA,EAAQhB,MAAEA,MAClBkB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoBN,QAAehB,MAAU,G,EA7BxCuB,CAHpBtB,OAAON,SAASC,cAAc,wBAAwBM,OAG9CF,EAAOG,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Находим форму по классу и добавляем обработчик события submit\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\n// Обработчик события submit формы\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  // Получаем значения полей ввода и преобразуем их в числа\n  const delay = Number(document.querySelector('input[name=\"delay\"]').value);\n  const step = Number(document.querySelector('input[name=\"step\"]').value);\n  const amount = Number(document.querySelector('input[name=\"amount\"]').value);\n\n  // Создаем промисы с заданными параметрами\n  createPromises(amount, delay, step);\n}\n\n// Создание промисов\nfunction createPromises(amount, delay, step) {\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const currentDelay = delay + (i - 1) * step;\n\n    // Создаем промис с задержкой\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay: currentDelay });\n        } else {\n          reject({ position, delay: currentDelay });\n        }\n      }, currentDelay);\n    });\n\n    \n    // Обрабатываем результат промиса\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay","Number","value","step","amount","delay1","i","position1","currentDelay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.7f3f1542.js.map"}