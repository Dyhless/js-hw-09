{"mappings":"gfAAAA,EAAA,SAGQC,SAASC,cAAc,UACtBD,SAASC,cAAc,WACxBD,SAASC,cAAc,UACrBD,SAASC,cAAc,YACvBD,SAASC,cAAc,wBAQTC,KAAKC,UAS1BC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALG,MACjBC,QAAQC,IAAI,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAE3DK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUO,EAAKR,EAALG,MAClBC,QAAQC,IAAI,sBAAqCC,OAAfL,EAAS,QAAYK,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector(\"[form]\"),\n  delay: document.querySelector(\"[delay]\"),\n  step: document.querySelector(\"[step]\"),\n  amount: document.querySelector(\"[amount]\"),\n  submit: document.querySelector(\"submit[submit]\"),\n};\n\nconst { form, delay, step, amount, submit } = refs;\n\nconst shouldResolve = true;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["parcelRequire","document","querySelector","Math","random","then","param","position","delay1","delay","console","log","concat","catch","delay2"],"version":3,"file":"03-promises.4b67be7f.js.map"}