{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOC,OAAOH,SAASC,cAAc,uBAAuBG,OAC5DC,KAAMF,OAAOH,SAASC,cAAc,sBAAsBG,OAC1DE,OAAQH,OAAOH,SAASC,cAAc,wBAAwBG,QAGxDG,EAA8BT,EAA9BC,KAAMS,EAAwBV,EAAxBI,MAAOO,EAAiBX,EAAjBO,KAAMK,EAAWZ,EAAXQ,OAuB3B,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUV,MAAAW,IAEpBG,EAAO,CAAEJ,WAAUV,MAAAW,G,GAEpBA,E,IA/BPN,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAENhB,EAAKiB,QAEL,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAQe,GAAK,EAAG,CAIlCd,EAHiBc,EAAI,EACAjB,EAAQiB,EAAIhB,GAG9BiB,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUgB,EAAKD,EAALzB,MACjB2B,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAN,G,IAAGf,EAAQe,EAARf,SAAUsB,EAAKP,EAALzB,MAClB2B,EAAAjC,GAASkC,OAAOK,QAAQ,sBAAqCH,OAAfpB,EAAS,QAAYoB,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: Number(document.querySelector('input[name=\"delay\"]').value),\n  step: Number(document.querySelector('input[name=\"step\"]').value),\n  amount: Number(document.querySelector('input[name=\"amount\"]').value),\n}\n\nconst { form, delay, step, amount } = refs;\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  form.reset();\n\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    const currentDelay = delay + i * step;\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","Number","value","step","amount","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","reset","i","then","param","delay1","$parcel$interopDefault","Notify","success","concat","catch","delay2","failure"],"version":3,"file":"03-promises.efb42eae.js.map"}